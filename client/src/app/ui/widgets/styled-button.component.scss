@import './../variables.scss';

$button-font-size: 0.95rem;
$button-border-radius: 0.25rem;
$button-padding: $button-font-size / 1.5; // --> 1 / 1.5 = 0.666
$button-colors: (
  'default-background': map_get($base-colors, 'secondary'),
  'default-inactive-background': inactive(map_get($base-colors, 'secondary')),
  'default-color': #fff,
  'default-inactive-color': #fff,
  'minimal-color': map_get($base-colors, 'secondary'),
  'minimal-border-color': map_get($base-colors, 'secondary'),
  'minimal-inactive-color': inactive(map_get($base-colors, 'primary-text')),
  'minimal-inactive-border-color': inactive(map_get($base-colors, 'primary-text')),
  'minimal-inverse-color': #fff,
  'minimal-inverse-background-color': map_get($base-colors, 'secondary'),
  'minimal-inverse-inactive-color': #fff,
  'minimal-inverse-inactive-background-color': inactive(map_get($base-colors, 'primary-text')),
);

:host {
  display: inline-block;

  button {
    line-height: 1;
    transition: box-shadow 0.25s;
    cursor: pointer;
    margin-top: map_get($base-padding, 'small');
    margin-bottom: map_get($base-padding, 'small');
    border-radius: $button-border-radius;
    font-size: $button-font-size;
    padding: $button-padding $button-padding * 1.5;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;

    &.style-minimal {
      border: map_get($base-line-widths, 'default') map_get($button-colors, 'minimal-border-color') solid;
      color: map_get($button-colors, 'minimal-color');
      background-color: transparent;

      &[disabled] {
        border-color: map_get($button-colors, 'minimal-inactive-border-color');
        color: map_get($button-colors, 'minimal-inactive-color');
      }
    }

    &.style-minimal-inverse {
      border: map_get($base-line-widths, 'default') transparent solid;
      color: map_get($button-colors, 'minimal-inverse-color');
      background-color: map_get($button-colors, 'minimal-inverse-background-color');

      &[disabled] {
        color: map_get($button-colors, 'minimal-inactive-color');
        background-color: map_get($button-colors, 'minimal-inverse-inactive-background-color');
      }
    }

    &.style-default {
      border: map_get($base-line-widths, 'default') transparent solid;
      color: map_get($button-colors, 'default-color');
      background-color: map_get($button-colors, 'default-background');
      box-shadow: 0.1rem 0.1rem 0.1rem rgba(0, 0, 0, 0.25);

      &:hover {
        box-shadow: 0.15rem 0.15rem 0.15rem rgba(0, 0, 0, 0.25);
      }

      &:active {
        box-shadow: 0.025rem 0.025rem 0.025rem rgba(0, 0, 0, 0.125);
      }

      &[disabled] {
        background-color: map_get($button-colors, 'default-inactive-background');
        color: map_get($button-colors, 'default-inactive-color');
      }
    }

    &:focus {
      outline: none;
    }

    &[disabled] {
      cursor: default;
    }

    .fa {
      transform: scale(1.25);

      &:not(:only-child) {
        margin-right: map_get($base-padding, 'small');
      }
    }
  }
}
