@import './variables.scss';

$landing-page-sidebar-width: 20rem;
$landing-page-sidebar-background-color: #fff;
$landing-page-content-size: 2rem;
$landing-page-vertical-padding: map_get($base-padding, 'smaller');
$landing-page-horizontal-padding: map_get($base-padding, 'default');
$landing-page-vertical-padding-mobile: map_get($base-padding, 'smaller');
$landing-page-horizontal-padding-mobile: map_get($base-padding, 'smaller');

:host {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: stretch;
  align-content: stretch;

  @include breakpoint('small'){
    flex-direction: row;
  }

  .sidebar {
    flex: 0 0 auto;
    display: flex;
    flex-direction: column;
    padding: $landing-page-vertical-padding-mobile $landing-page-horizontal-padding-mobile;
    background: $landing-page-sidebar-background-color;

    @include breakpoint('small'){
      flex-basis: $landing-page-sidebar-width;
      padding: $landing-page-vertical-padding $landing-page-horizontal-padding;
    }

    h2 {
      margin-top: map_get($base-padding, 'large');
    }

    p {
      color: map_get($base-colors, 'secondary-text');
      line-height: 1.5;
    }

    small {
      margin-top: auto;
      color: inactive(map_get($base-colors, 'primary-text'));
    }
  }

  @keyframes zoomIn {
    from {
      transform: scale(1);
    }
    to {
      transform: scale(1.5);
    }
  }

  .content {
    position: relative;
    overflow: hidden;
    flex: 1 1 auto;

    .background {
      height: auto;
      width: 100%;
      animation: zoomIn 30s ease-in-out infinite alternate;
      position: absolute;
      bottom: 0;
      left: 0;
    }

    h1 {
      padding: $landing-page-vertical-padding-mobile $landing-page-horizontal-padding-mobile;
      max-width: map_get($base-breakpoints, 'small') * 0.75;
      margin-bottom: map_get($base-padding, 'large');
      position: relative;

      @include breakpoint('small'){
        padding: $landing-page-vertical-padding $landing-page-horizontal-padding;
      }

      span {
        color: inactive(map_get($base-colors, 'primary'));

        &:first-child {
          color: map_get($base-colors, 'primary');
        }
      }
    }
  }
}
