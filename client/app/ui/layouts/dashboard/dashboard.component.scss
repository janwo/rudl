@import '../../variables.scss';
@import "../../mixins.scss";

$header-background-color: map_get($base-colors, 'background-highlighted');
$header-content-size: 2rem;
$header-vertical-padding: map_get($base-padding, 'smaller');
$header-vertical-padding-mobile: map_get($base-padding, 'smaller');
$header-horizontal-padding: map_get($base-padding, 'default');
$header-horizontal-padding-mobile: map_get($base-padding, 'smaller');

:host {
  display: block;
  padding-top: $header-vertical-padding-mobile * 2 + $header-content-size;

  @include breakpoint('small') {
    padding-top: $header-vertical-padding * 2 + $header-content-size;
  }

  header {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    box-shadow: map_get($base-shadow, 'default');
    background-color: $header-background-color;
    padding-left: $header-horizontal-padding-mobile;
    padding-right: $header-horizontal-padding-mobile;
    height: $header-vertical-padding-mobile * 2 + $header-content-size;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    z-index: 100;

    @include breakpoint('small') {
      padding-left: $header-horizontal-padding;
      padding-right: $header-horizontal-padding;
      height: $header-vertical-padding * 2 + $header-content-size;
    }

    .stretched {
      display: flex;
      align-items: stretch;
      flex: 1 1 auto;
      align-self: stretch;
      margin-right: map_get($base-padding, 'small');
      margin-left: map_get($base-padding, 'small');
      position: relative;
      overflow: hidden;

      @include breakpoint('small') {
        margin-right: map_get($base-padding, 'default');
        margin-left: map_get($base-padding, 'default');
      }

      & > * {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        display: flex;
        align-items: center;
        z-index: 0;

        &.active {
          z-index: 1;
        }
      }

      .search {
        transform: translateY(- $header-content-size);
        transition: transform 0.3s, opacity 0.3s;
        opacity: 0;

        &.active {
          opacity: 1;
          transform: translateY(0);
        }

        search-bar {
          flex: 1 1 auto;
        }
      }

      .menu {
        transition: transform 0.3s, opacity 0.3s;
        transform: translateY($header-content-size);
        opacity: 0;

        &.active {
          opacity: 1;
          transform: translateY(0);
        }

        menu {
          flex: 1 1 auto;
          padding-top: map_get($base-padding, 'smaller');
          padding-bottom: map_get($base-padding, 'smaller');

          @include breakpoint(null, 'small') {
            .search-menu-item ::ng-deep span {
              display: none;
            }
          }
        }
      }
    }

    dropdown-menu {
      top: 100%;
      right: $header-horizontal-padding-mobile;

      @include breakpoint('small') {
        right: $header-horizontal-padding;
      }
    }

    button {
      flex: 0 0 auto;
      width: $header-content-size;
      height: $header-content-size;
      cursor: pointer;
      background: transparent;
      font-size: 1rem * 1.125;

      &:not(:last-child) {
        margin-right: map_get($base-padding, 'small');
      }
    }

    user-avatar {
      flex: 0 0 auto;
      width: $header-content-size;
      height: $header-content-size;
      cursor: pointer;
    }
  }

  section {
    display: flex;
    flex-direction: column;
    overflow: auto;
    position: relative;

    app-footer {
      flex: 0 0 auto;
    }
  }
}
