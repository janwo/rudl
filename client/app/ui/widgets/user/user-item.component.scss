@import '../../variables.scss';

$user-item-avatar-list-size: map_get($base-heading-font-size, 'h2') * map_get($base-line-height, 'default') + map_get($base-padding, 'small') + map_get($base-font-size, 'default') * map_get($base-line-height, 'default') + map_get($base-padding, 'smallest') - map_get($base-padding, 'small') * 2;
$user-item-avatar-block-size: $user-item-avatar-list-size * 1.5;

:host {
  display: block;

  .card {
    cursor: pointer;
    display: flex;
    width: 100%;
    align-items: center;
    position: relative;

    user-avatar {
      cursor: pointer;
      flex: 0 0 auto;
    }

    .meta {
      flex: 1 1 auto;

      .name {
        font-family: $base-heading-font-family;
        font-weight: $base-heading-font-weight;
        font-size: map_get($base-heading-font-size, 'h2');
        display: block;

        ::ng-deep .highlight {
          color: map_get($base-colors, 'primary');
        }
      }

      .relation {
        display: block;
        margin-top: map_get($base-padding, 'smallest');
        color: map_get($base-colors, 'secondary-text');

        a {
          color: map_get($base-colors, 'primary-text');
        }
      }
    }

    &.block {
      flex-direction: column;

      .meta {
        margin-top: map_get($base-padding, 'smaller');
        text-align: center;

        .relation {
          margin-top: map_get($base-padding, 'small');
        }
      }

      user-avatar {
        width: $user-item-avatar-block-size;
        height: $user-item-avatar-block-size;
      }
    }

    &.list {
      user-avatar {
        width: $user-item-avatar-list-size;
        height: $user-item-avatar-list-size;
      }

      .meta {
        margin-left: map_get($base-padding, 'smaller');
      }
    }

    .overflow {
      position: absolute;
      top: 0;
      right: 0;
      bottom: auto;
      pointer-events: none;
      display: flex;
      flex-direction: row;
      align-items: center;

      & ::ng-deep > * {
        pointer-events: auto;
      }
    }
  }
}
