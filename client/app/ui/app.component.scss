@import "./variables.scss";
@import "./mixins.scss";

// Reset.
::ng-deep * {
  box-sizing: border-box;
  border: none;
  outline: none;
  margin: 0;
  padding: 0;

  &:after, &:before {
    box-sizing: border-box;
  }
}

::ng-deep ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

// Set paragraphs
::ng-deep p {
  margin-bottom: map_get($base-padding, 'small');
  line-height: map_get($base-line-height, 'multiline');
}

// Reset text decorations.
::ng-deep a {
  text-decoration: none;
  cursor: pointer;
  color: inherit;
}

// Reset borders.
::ng-deep button {
  border: none;
  outline: none;
  cursor: pointer;
}

// Set headings.
@each $heading, $size in $base-heading-font-size {
  ::ng-deep #{$heading} {
    font-family: $base-heading-font-family;
    font-weight: $base-heading-font-weight;
    margin-top: $size * 1.5;
    margin-bottom: $size;
    font-size: $size;

    &:first-child {
      margin-top: 0;
    }
  }
}

// Set helper classes.
::ng-deep .hide {
  display: none !important;
}

@each $name, $value in $base-breakpoints {
  @include breakpoint(null, $name) {
    ::ng-deep .hide-max-#{$name} {
      display: none;
    }
  }

  @include breakpoint($name, null) {
    ::ng-deep .hide-min-#{$name} {
      display: none;
    }
  }
}

// Define default card.
::ng-deep .card {
  padding: map_get($base-padding, 'small');
  border-radius: $base-border-radius;
  background-color: map_get($base-colors, 'background-highlighted');
  box-shadow: map_get($base-shadow, 'default');

  @include breakpoint('small') {
    padding: map_get($base-padding, 'smaller');
  }

  &.elevated {
    box-shadow: map_get($base-shadow, 'elevated');
  }
}

::ng-deep .material-icons {
  font-size: inherit;
}

::ng-deep small {
  font-size: map_get($base-font-size, 'small');
  hyphens: auto;
}

// App component.
:host {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background-color: map_get($base-colors, 'background');
  overflow: hidden;

  & ::ng-deep {
    font-family: $base-font-family;
    font-weight: $base-font-weight-normal;
    font-size: map_get($base-font-size, 'default');
    color: map_get($base-colors, 'primary-text');
    line-height: map_get($base-line-height, 'default');
  }
}
